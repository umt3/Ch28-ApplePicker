using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class ApplePicker : MonoBehaviour
{
    public static float bottomY = -20f;


    [Header("Set in Inspector")]

    public GameObject basketPrefab;
    public int numBaskets = 3;
    public float basketBottomY = -14f;
    public float basketSpacingY = 2f;
    public List<GameObject> basketList;


    //prefab for instantiating apples
    public GameObject applePrefab;

    // speed at which the AppleTree moves
    public float speed = 1f;

    //distance where apple tree turns//
    public float leftAndRightEdge = 10f;
    //chance that the AppleTree will change directions//
    public float chanceToChangeDirections = 0.1f;

    //Rate at which Apples will be instantiated
    public float secondsBetweenAppleDrops = 1f;

    // Start is called before the first frame update
    void Start()
    {

        basketList = new List<GameObject>();
        for (int i = 0; i < numBaskets; i++)
        {
            GameObject tBasketGO = Instantiate<GameObject>(basketPrefab);
            Vector3 pos = Vector3.zero;
            pos.y = basketBottomY + (basketSpacingY * i);
            tBasketGO.transform.position.= pos;
            basketList.add(tBasketGO);

        }

        public void AppleDestroyed()
        {
            // destroy all falling apples
            GameObject[] tAppleArray = GameObject.FindGameObjectWithTag("Apple");
            foreach (GameObject tGo in tAppleArray)
            {
                Destroy(tGo);
            }


            // destroy one of the baskets
            // get the index of the last basket

            int basketIndex = basketList.Count - 1;

            // get reference to to basket gameObject

            GameObject tBasketGO = basketList[basketIndex];
            // remove basket from list and destroy game Objects

            basketList.RemoveAt(basketIndex);
            Destroy(tBasketGO);


            //if no baskets left, restart game

            if (basketList.Count == 0)
            {
                SceneManager.LoadScene("_Scene_)");
            }


        }
        for (int i = 0; i < numBaskets; i++)
        {
            GameObject tBasketGo = Instantiate<GameObject>(basketPrefab);
            Vector3 pos = Vector3.zero;
            pos.y = basketBottomY + (basketSpacingY * i);
            tBasketGo.transform.position = pos;

        }

        //dropping aoples every second
        Invoke("DropApple", 2f);

    }
    void DropApple()
    {
        GameObject apple = Instantiate<GameObject>(applePrefab);
        apple.transform.position = transform.position;
        Invoke("DropApple", secondsBetweenAppleDrops);
    }

    // Update is called once per frame
    void Update()


    {
        if (transform.position.y < bottomY)
        {
            Destroy(this.gameObject);
        }
        //basic movement
        Vector3 pos = transform.position;
        pos.x += speed * Time.deltaTime;
        transform.position = pos;
        transform.position.x += speed * Time.deltaTime;
        pos.x += speed * Time.deltaTime;
        pos.x += 1.0f * 0.04f;
        pos.x += 0.04f;

        pos.x += speed * Time.deltaTime;
        pos.x += 1.0f * 0.01f;
        pos.x += 0.01f;
        //changing directions 

        if (pos.x < -leftAndRightEdge)
        {
            speed = Mathf.Abs(speed); //move right
        }
        else if (pos.x > leftAndRightEdge)
        {
            speed = -Mathf.Abs(speed); //move left 
        }

        void FixedUpdate()
        {
            //changing direction randomly is time based


            if (Random.value < chanceToChangeDirections)
            {
                speed *= -1;  //change direction
            }
        }
    }
}